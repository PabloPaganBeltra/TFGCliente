{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo PC\\\\Desktop\\\\Carpeta\\\\AproyectosReact\\\\MERNTasks\\\\cliente\\\\src\\\\context\\\\proyectos\\\\proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nimport clienteAxios from '../../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null\n  }; //Dispatch para ejecutar acciones, igual useState\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //Serie de funciones para el crud\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      console.log(resultado); //Insertar proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Validar el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Seleccion del proyecto\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Elimina un proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","resultado","post","console","log","data","error","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,gBAHJ,EAIIC,kBAJJ,EAKIC,eALJ,EAMIC,iBANJ,QAOW,aAPX;AAQA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE3B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,EADM;AAEjBC,IAAAA,UAAU,EAAG,KAFI;AAGjBC,IAAAA,eAAe,EAAG,KAHD;AAIjBC,IAAAA,QAAQ,EAAE;AAJO,GAArB,CAF2B,CAS3B;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACE,eAAD,EAAkBU,YAAlB,CAApC,CAX2B,CAa3B;;AACA,QAAMO,iBAAiB,GAAG,MAAK;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD,CAd2B,CAoB3B;;;AACA,QAAMkB,gBAAgB,GAAG,MAAK;AAC1BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,iBADD;AAELkB,MAAAA,OAAO,EAAET;AAFJ,KAAD,CAAR;AAIH,GALD,CArB2B,CA4B3B;;;AACA,QAAMU,eAAe,GAAG,MAAMP,QAAN,IAAkB;AAEtC,QAAI;AACA,YAAMQ,SAAS,GAAG,MAAMf,YAAY,CAACgB,IAAb,CAAkB,gBAAlB,EAAoCT,QAApC,CAAxB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAFA,CAGA;;AACAN,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEf,gBADD;AAELiB,QAAAA,OAAO,EAAEE,SAAS,CAACI;AAFd,OAAD,CAAR;AAIH,KARD,CAQE,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;AAEJ,GAdD,CA7B2B,CA6C3B;;;AACA,QAAMC,YAAY,GAAG,MAAK;AACtBZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH,GAJD,CA9C2B,CAoD3B;;;AACA,QAAMyB,cAAc,GAAGC,UAAU,IAAI;AACjCd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,eADD;AAELe,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAIH,GALD,CArD2B,CA4D3B;;;AACA,QAAMC,gBAAgB,GAAGD,UAAU,IAAG;AAClCd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACZ,iBADA;AAELc,MAAAA,OAAO,EAAEU;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHnB,MAAAA,SAAS,EAAGI,KAAK,CAACJ,SADf;AAEHC,MAAAA,UAAU,EAAGG,KAAK,CAACH,UAFhB;AAGHC,MAAAA,eAAe,EAAGE,KAAK,CAACF,eAHrB;AAIHC,MAAAA,QAAQ,EAAGC,KAAK,CAACD,QAJd;AAKHG,MAAAA,iBALG;AAMHE,MAAAA,gBANG;AAOHE,MAAAA,eAPG;AAQHO,MAAAA,YARG;AASHC,MAAAA,cATG;AAUHE,MAAAA;AAVG,KADX;AAAA,cAcKtB,KAAK,CAACuB;AAdX;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtFD;;GAAMxB,a;;KAAAA,a;AAwFN,eAAeA,aAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport { \r\n    FORMULARIO_PROYECTO, \r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO\r\n    } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n\r\n    const initialState = {\r\n        proyectos :[],\r\n        formulario : false,\r\n        errorformulario : false,\r\n        proyecto: null\r\n    }\r\n\r\n    //Dispatch para ejecutar acciones, igual useState\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n    //Serie de funciones para el crud\r\n    const mostrarFormulario = () =>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    //Obtener los proyectos\r\n    const obtenerProyectos = () =>{\r\n        dispatch({\r\n            type: OBTENER_PROYECTOS,\r\n            payload: proyectos\r\n        })\r\n    }\r\n\r\n    //Agregar nuevo proyecto\r\n    const agregarProyecto = async proyecto => {\r\n\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            //Insertar proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    //Validar el formulario por errores\r\n    const mostrarError = () =>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //Seleccion del proyecto\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    //Elimina un proyecto\r\n    const eliminarProyecto = proyectoId =>{\r\n        dispatch({\r\n            type:ELIMINAR_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos : state.proyectos,\r\n                formulario : state.formulario,\r\n                errorformulario : state.errorformulario,\r\n                proyecto : state.proyecto,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}