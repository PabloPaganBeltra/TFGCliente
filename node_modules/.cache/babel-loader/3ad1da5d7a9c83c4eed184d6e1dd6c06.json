{"ast":null,"code":"import { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types'; //export default ( state, action )=>{\n\nconst authR = (state, action) => {\n  switch (action.type) {\n    //la respuesta nos da el token, asi que la podemos pasar por le payload\n    case LOGIN_EXITOSO:\n    case REGISTRO_EXITOSO:\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        autenticado: true,\n        mensaje: null,\n        cargando: false\n      };\n\n    case OBTENER_USUARIO:\n      return { ...state,\n        usuario: action.payload,\n        autenticado: true,\n        cargando: false\n      };\n\n    case CERRAR_SESION:\n    case LOGIN_ERROR:\n    case REGISTRO_ERROR:\n      localStorage.removeItem('token');\n      return { ...state,\n        usuario: null,\n        autenticado: null,\n        token: null,\n        mensaje: action.payload,\n        cargando: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default (state, action);","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/context/autenticacion/authReducer.js"],"names":["REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","authR","state","action","type","localStorage","setItem","payload","token","autenticado","mensaje","cargando","usuario","removeItem"],"mappings":"AACA,SACIA,gBADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,aAJJ,EAKIC,WALJ,EAMIC,aANJ,QAOQ,aAPR,C,CAWA;;AACA,MAAOC,KAAK,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKN,aAAL;AACA,SAAKH,gBAAL;AACIU,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACI,OAAP,CAAeC,KAA7C;AACA,aAAM,EACF,GAAGN,KADD;AAEFO,QAAAA,WAAW,EAAC,IAFV;AAGFC,QAAAA,OAAO,EAAC,IAHN;AAIFC,QAAAA,QAAQ,EAAC;AAJP,OAAN;;AAOJ,SAAKd,eAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEFU,QAAAA,OAAO,EAAET,MAAM,CAACI,OAFd;AAGFE,QAAAA,WAAW,EAAE,IAHX;AAIFE,QAAAA,QAAQ,EAAC;AAJP,OAAN;;AAOJ,SAAKX,aAAL;AACA,SAAKD,WAAL;AACA,SAAKH,cAAL;AACIS,MAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACA,aAAM,EACF,GAAGX,KADD;AAEFU,QAAAA,OAAO,EAAC,IAFN;AAGFH,QAAAA,WAAW,EAAE,IAHX;AAIFD,QAAAA,KAAK,EAAC,IAJJ;AAKFE,QAAAA,OAAO,EAAEP,MAAM,CAACI,OALd;AAMFI,QAAAA,QAAQ,EAAE;AANR,OAAN;;AASJ;AACI,aAAOT,KAAP;AAlCR;AAqCH,CAtCD;;AAwCA,gBAAiBA,KAAK,EAAEC,MAAxB","sourcesContent":["\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n } from '../../types';\r\n\r\n\r\n\r\n//export default ( state, action )=>{\r\nconst  authR= (state, action) =>{\r\n    switch(action.type){\r\n        //la respuesta nos da el token, asi que la podemos pasar por le payload\r\n        case LOGIN_EXITOSO:\r\n        case REGISTRO_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado:true,\r\n                mensaje:null,\r\n                cargando:false\r\n            }\r\n\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                usuario: action.payload,\r\n                autenticado: true,\r\n                cargando:false\r\n            }\r\n\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                usuario:null,\r\n                autenticado: null,\r\n                token:null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ( state, action )"]},"metadata":{},"sourceType":"module"}