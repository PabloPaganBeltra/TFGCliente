{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo PC\\\\Desktop\\\\Carpeta\\\\AproyectosReact\\\\MERNTasks\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      id: 1,\n      nombre: 'elegir platafomra',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 2,\n      nombre: 'elegir colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 3,\n      nombre: 'elegir lenguaje',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 4,\n      nombre: 'elegir hosting',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 5,\n      nombre: 'elegir platafomra',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 6,\n      nombre: 'elegir colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 7,\n      nombre: 'elegir lenguaje',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 8,\n      nombre: 'elegir platafomra',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 9,\n      nombre: 'elegir colores',\n      estado: false,\n      proyectoId: 1\n    }, {\n      id: 10,\n      nombre: 'elegir lenguaje',\n      estado: false,\n      proyectoId: 2\n    }],\n    tareasproyecto: null,\n    errortarea: false\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //CREAR LAS FUNCIONES QUE NECESITAMOS DE LAS TAREAS\n  //Obtener las tareas de un proyecto \n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Anyadir una tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; //Validar y mostrar un error en caso de ser necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar las tareas por el id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; //Cambiar el estado de las tareas\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TareaState","props","initialState","tareas","id","nombre","estado","proyectoId","tareasproyecto","errortarea","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","cambiarEstadoTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    ESTADO_TAREA\r\n} from '../../types';\r\n\r\nconst TareaState = props => {\r\n    const initialState={\r\n        tareas:[\r\n            {id: 1, nombre: 'elegir platafomra', estado: true, proyectoId: 1},\r\n            {id: 2, nombre: 'elegir colores', estado: false, proyectoId: 2},\r\n            {id: 3, nombre: 'elegir lenguaje', estado: false, proyectoId: 3},\r\n            {id: 4, nombre: 'elegir hosting', estado: true, proyectoId: 4},\r\n            {id: 5, nombre: 'elegir platafomra', estado: true, proyectoId: 1},\r\n            {id: 6, nombre: 'elegir colores', estado: false, proyectoId: 2},\r\n            {id: 7, nombre: 'elegir lenguaje', estado: false, proyectoId: 3},\r\n            {id: 8, nombre: 'elegir platafomra', estado: true, proyectoId: 4},\r\n            {id: 9, nombre: 'elegir colores', estado: false, proyectoId: 1},\r\n            {id: 10, nombre: 'elegir lenguaje', estado: false, proyectoId: 2}\r\n        ],\r\n        tareasproyecto: null,\r\n        errortarea: false\r\n    }\r\n\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n\r\n    //CREAR LAS FUNCIONES QUE NECESITAMOS DE LAS TAREAS\r\n\r\n    //Obtener las tareas de un proyecto \r\n    const obtenerTareas = proyectoId =>{\r\n        dispatch({\r\n            type: TAREAS_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    // Anyadir una tarea al proyecto seleccionado\r\n    const agregarTarea = tarea=>{\r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    //Validar y mostrar un error en caso de ser necesario\r\n    const validarTarea = () =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n\r\n        })\r\n    }\r\n\r\n    //Eliminar las tareas por el id\r\n    const eliminarTarea = id => {\r\n        dispatch({\r\n            type: ELIMINAR_TAREA,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    //Cambiar el estado de las tareas\r\n    const cambiarEstadoTarea = tarea => {\r\n        dispatch({\r\n            type: ESTADO_TAREA,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n        value={{\r\n            tareas: state.tareas,\r\n            tareasproyecto : state.tareasproyecto,\r\n            errortarea: state.errortarea,\r\n            obtenerTareas,\r\n            agregarTarea,\r\n            validarTarea,\r\n            eliminarTarea,\r\n            cambiarEstadoTarea\r\n        }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}