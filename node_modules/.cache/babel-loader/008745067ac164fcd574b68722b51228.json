{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo PC\\\\Desktop\\\\Carpeta\\\\AproyectosReact\\\\MERNTasks\\\\cliente\\\\src\\\\context\\\\autenticacion\\\\authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //funciones para registrar los usuarios\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/usuarios', datos); //console.log(respuesta.data);\n\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); //Obtener usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      //console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //devolver usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth'); //console.log(respuesta);\n\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; //usuario iniciando sesion\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      }); //Obtener usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //cierra sesion del usuario\n\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado,\n      cerrarSesion\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/context/autenticacion/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","usuarioAutenticado","error","alerta","msg","response","categoria","get","console","log","iniciarSesion","cerrarSesion","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,aAJJ,EAKIC,WALJ,EAMIC,aANJ,QAOQ,aAPR;;;AASC,MAAMC,SAAS,GAAGC,KAAK,IAAG;AAAA;;AAEvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,WAAW,EAAE,IAFI;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAE,IAJQ;AAKjBC,IAAAA,QAAQ,EAAE;AALO,GAArB;AAQA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBtB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAAtC,CAVuB,CAYvB;;AACA,QAAMU,gBAAgB,GAAG,MAAMC,KAAN,IAAa;AAClC,QAAI;AAEA,YAAMC,SAAS,GAAG,MAAMtB,YAAY,CAACuB,IAAb,CAAkB,eAAlB,EAAmCF,KAAnC,CAAxB,CAFA,CAGA;;AAEAF,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEtB,gBADD;AAELuB,QAAAA,OAAO,EAAEH,SAAS,CAACI;AAFd,OAAD,CAAR,CALA,CAUA;;AACAC,MAAAA,kBAAkB;AAErB,KAbD,CAaE,OAAOC,KAAP,EAAc;AACZ;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBI,GADd;AAEXE,QAAAA,SAAS,EAAE;AAFA,OAAf;AAKAb,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAErB,cADD;AAELsB,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAIH;AACJ,GA1BD,CAbuB,CAyCvB;;;AACA,QAAMF,kBAAkB,GAAG,YAAW;AAClC,UAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACLV,MAAAA,SAAS,CAACU,KAAD,CAAT;AAEH;;AAED,QAAI;AACA,YAAMW,SAAS,GAAG,MAAMtB,YAAY,CAACiC,GAAb,CAAiB,WAAjB,CAAxB,CADA,CAEA;;AACAd,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEpB,eADD;AAELqB,QAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeX;AAFnB,OAAD,CAAR;AAKH,KARD,CAQE,OAAOa,KAAP,EAAc;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAT,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAElB;AADD,OAAD,CAAR;AAGH;AACJ,GArBD,CA1CuB,CAiEvB;;;AACA,QAAM8B,aAAa,GAAG,MAAMf,KAAN,IAAc;AAChC,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMtB,YAAY,CAACuB,IAAb,CAAkB,WAAlB,EAA+BF,KAA/B,CAAxB;AACAF,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEnB,aADD;AAELoB,QAAAA,OAAO,EAAEH,SAAS,CAACI;AAFd,OAAD,CAAR,CAFA,CAOA;;AACAC,MAAAA,kBAAkB;AACrB,KATD,CASE,OAAOC,KAAP,EAAc;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBI,GAAhC;AACA,YAAMD,MAAM,GAAG;AACXC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBI,GADd;AAEXE,QAAAA,SAAS,EAAE;AAFA,OAAf;AAKAb,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAErB,cADD;AAELsB,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAIH;AACJ,GAtBD,CAlEuB,CA0FvB;;;AACA,QAAMQ,YAAY,GAAG,MAAI;AACrBlB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAG;AACJI,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADT;AAEJG,MAAAA,WAAW,EAAEI,KAAK,CAACJ,WAFf;AAGJC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHX;AAIJC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJX;AAKJI,MAAAA,gBALI;AAMJgB,MAAAA,aANI;AAOJT,MAAAA,kBAPI;AAQJU,MAAAA;AARI,KADZ;AAAA,cAWG5B,KAAK,CAAC6B;AAXT;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBF,CAlHD;;GAAM9B,S;;KAAAA,S;AAoHN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n } from '../../types';\r\n\r\n const AuthState = props =>{\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n    //funciones para registrar los usuarios\r\n    const registrarUsuario = async datos=>{\r\n        try {\r\n            \r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos );\r\n            //console.log(respuesta.data);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n\r\n        } catch (error) {\r\n            //console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //devolver usuario autenticado\r\n    const usuarioAutenticado = async () =>{\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            //console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //usuario iniciando sesion\r\n    const iniciarSesion = async datos =>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //cierra sesion del usuario\r\n    const cerrarSesion = ()=>{\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value ={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >{ props.children }\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n }\r\n\r\n export default AuthState;"]},"metadata":{},"sourceType":"module"}