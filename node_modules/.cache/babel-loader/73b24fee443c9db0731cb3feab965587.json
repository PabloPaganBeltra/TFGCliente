{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo PC\\\\Desktop\\\\Carpeta\\\\AproyectosReact\\\\MERNTasks\\\\cliente\\\\src\\\\components\\\\tareas\\\\FormTarea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormTarea = () => {\n  _s();\n\n  //Saber si un proyecto esta activo\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext; //Obtener la funcion del context de tarea\n\n  const tareasContext = useContext(tareaContext);\n  const {\n    tareaseleccionada,\n    errortarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea\n  } = tareasContext; //EFFECT que detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    } //dependencia\n\n  }, [tareaseleccionada]); //State del formulario\n\n  const [tarea, guardarTarea] = useState({\n    nombre: ''\n  }); //extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; //si no hay ningun proyecto seleccionado\n\n  if (!proyecto) return null; //Array destructuring para extraer proyecto\n\n  const [proyectoActual] = proyecto; //leer los valores del formualrio\n\n  const hadleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar\n\n    if (nombre.trim() === '') {\n      validarTarea();\n      return;\n    } //Es edicion o nueva tarea ?\n\n\n    if (tareaseleccionada === null) {\n      //tarea nueva\n      //poner nueva tarea al state de tareas\n      tarea.proyectoId = proyectoActual.id;\n      tarea.estado = false;\n      agregarTarea(tarea);\n    } else {\n      //editar tarea existente\n      actualizarTarea(tarea);\n    } //Obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); //reiniciar form\n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-text\",\n          placeholder: \"nombre tarea...\",\n          name: \"nombre\",\n          value: nombre,\n          onChange: hadleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primario btn-submit btn-block\",\n          value: tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this), errortarea ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje error\",\n      children: \" El nombre de la tarea es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 27\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormTarea, \"0nzqN3xaAyjKIIwsLnyEQ2PTYMY=\");\n\n_c = FormTarea;\nexport default FormTarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTarea\");","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","guardarTarea","nombre","tarea","proyectoActual","hadleChange","e","target","name","value","onSubmit","preventDefault","trim","proyectoId","id","estado"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Saber si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea} = tareasContext;\r\n\r\n    //EFFECT que detecta si hay una tarea seleccionada\r\n    useEffect(()=>{\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada);\r\n        } else {\r\n            guardarTarea({\r\n                nombre : ''\r\n            })\r\n        }\r\n        //dependencia\r\n    }, [tareaseleccionada]);\r\n\r\n\r\n    //State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre:''\r\n    })\r\n\r\n    //extraer el nombre del proyecto\r\n    const {nombre} = tarea;\r\n\r\n    //si no hay ningun proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //Array destructuring para extraer proyecto\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    //leer los valores del formualrio\r\n    const hadleChange = e =>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n        //Es edicion o nueva tarea ?\r\n        if(tareaseleccionada === null ){\r\n                //tarea nueva\r\n            //poner nueva tarea al state de tareas\r\n            tarea.proyectoId = proyectoActual.id;\r\n            tarea.estado = false;\r\n            agregarTarea(tarea);  \r\n        }else {\r\n            //editar tarea existente\r\n            actualizarTarea(tarea);\r\n        }\r\n\r\n        //Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n\r\n        //reiniciar form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className='formulario'>\r\n           <form\r\n                onSubmit={onSubmit}\r\n           >\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='text'\r\n                        className='input-text'\r\n                        placeholder='nombre tarea...'\r\n                        name='nombre'\r\n                        value={nombre}\r\n                        onChange = {hadleChange}\r\n                    />\r\n                </div>\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='submit'\r\n                        className='btn btn-primario btn-submit btn-block'\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form> \r\n            {errortarea ? <p className='mensaje error'> El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}