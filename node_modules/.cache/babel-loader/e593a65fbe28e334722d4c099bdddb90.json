{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo PC\\\\Desktop\\\\Carpeta\\\\AproyectosReact\\\\MERNTasks\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareasproyecto: null,\n    errortarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //CREAR LAS FUNCIONES QUE NECESITAMOS DE LAS TAREAS\n  //Obtener las tareas de un proyecto \n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Anyadir una tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Validar y mostrar un error en caso de ser necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar las tareas por el id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; //Cambiar el estado de las tareas\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; //Extraer una tarea para la edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //edita o modifica una tarea\n\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyectoId","type","payload","agregarTarea","tarea","resultado","post","console","log","error","validarTarea","eliminarTarea","id","cambiarEstadoTarea","guardarTareaActual","actualizarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    ESTADO_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareaState = props => {\r\n    const initialState={\r\n        tareasproyecto: null,\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n\r\n    //CREAR LAS FUNCIONES QUE NECESITAMOS DE LAS TAREAS\r\n\r\n    //Obtener las tareas de un proyecto \r\n    const obtenerTareas = proyectoId =>{\r\n        dispatch({\r\n            type: TAREAS_PROYECTO,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    // Anyadir una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea=>{\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //Validar y mostrar un error en caso de ser necesario\r\n    const validarTarea = () =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n\r\n        })\r\n    }\r\n\r\n    //Eliminar las tareas por el id\r\n    const eliminarTarea = id => {\r\n        dispatch({\r\n            type: ELIMINAR_TAREA,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    //Cambiar el estado de las tareas\r\n    const cambiarEstadoTarea = tarea => {\r\n        dispatch({\r\n            type: ESTADO_TAREA,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    //Extraer una tarea para la edicion\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload : tarea\r\n        })\r\n    }\r\n\r\n    //edita o modifica una tarea\r\n    const actualizarTarea = tarea => {\r\n        dispatch({\r\n            type: ACTUALIZAR_TAREA,\r\n            payload : tarea\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n        value={{\r\n            tareasproyecto : state.tareasproyecto,\r\n            errortarea: state.errortarea,\r\n            tareaseleccionada: state.tareaseleccionada,\r\n            obtenerTareas,\r\n            agregarTarea,\r\n            validarTarea,\r\n            eliminarTarea,\r\n            cambiarEstadoTarea,\r\n            guardarTareaActual,\r\n            actualizarTarea\r\n        }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}