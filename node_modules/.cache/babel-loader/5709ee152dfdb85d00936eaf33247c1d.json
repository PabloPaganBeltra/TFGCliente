{"ast":null,"code":"import _defineProperty from\"C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import proyectoContext from'../../context/proyectos/proyectoContext';import tareaContext from'../../context/tareas/tareaContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormTarea=function FormTarea(){//Saber si un proyecto esta activo\nvar proyectosContext=useContext(proyectoContext);var proyecto=proyectosContext.proyecto;//Obtener la funcion del context de tarea\nvar tareasContext=useContext(tareaContext);var tareaseleccionada=tareasContext.tareaseleccionada,errortarea=tareasContext.errortarea,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,obtenerTareas=tareasContext.obtenerTareas,actualizarTarea=tareasContext.actualizarTarea;//EFFECT que detecta si hay una tarea seleccionada\nuseEffect(function(){if(tareaseleccionada!==null){guardarTarea(tareaseleccionada);}else{guardarTarea({nombre:''});}//dependencia\n},[tareaseleccionada]);//State del formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],guardarTarea=_useState2[1];//extraer el nombre del proyecto\nvar nombre=tarea.nombre;//si no hay ningun proyecto seleccionado\nif(!proyecto)return null;//Array destructuring para extraer proyecto\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];//leer los valores del formualrio\nvar hadleChange=function hadleChange(e){guardarTarea(_objectSpread(_objectSpread({},tarea),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();//validar\nif(nombre.trim()===''){validarTarea();return;}//Es edicion o nueva tarea ?\nif(tareaseleccionada===null){//tarea nueva\n//poner nueva tarea al state de tareas\ntarea.proyecto=proyectoActual._id;agregarTarea(tarea);}else{//editar tarea existente\nactualizarTarea(tarea);}//Obtener y filtrar las tareas del proyecto actual\nobtenerTareas(proyectoActual._id);//reiniciar form\nguardarTarea({nombre:''});};return/*#__PURE__*/_jsxs(\"div\",{className:\"formulario\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"nombre tarea...\",name:\"nombre\",value:nombre,onChange:hadleChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"contenedor-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primario btn-submit btn-block\",value:tareaseleccionada?'Editar Tarea':'Agregar Tarea'})})]}),errortarea?/*#__PURE__*/_jsx(\"p\",{className:\"mensaje error\",children:\" El nombre de la tarea es obligatorio\"}):null]});};export default FormTarea;","map":{"version":3,"sources":["C:/Users/Pablo PC/Desktop/Carpeta/AproyectosReact/MERNTasks/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","guardarTarea","nombre","tarea","proyectoActual","hadleChange","e","target","name","value","onSubmit","preventDefault","trim","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Saber si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea} = tareasContext;\r\n\r\n    //EFFECT que detecta si hay una tarea seleccionada\r\n    useEffect(()=>{\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada);\r\n        } else {\r\n            guardarTarea({\r\n                nombre : ''\r\n            })\r\n        }\r\n        //dependencia\r\n    }, [tareaseleccionada]);\r\n\r\n\r\n    //State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre:''\r\n    })\r\n\r\n    //extraer el nombre del proyecto\r\n    const {nombre} = tarea;\r\n\r\n    //si no hay ningun proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //Array destructuring para extraer proyecto\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    //leer los valores del formualrio\r\n    const hadleChange = e =>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n        //Es edicion o nueva tarea ?\r\n        if(tareaseleccionada === null ){\r\n                //tarea nueva\r\n            //poner nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);  \r\n        }else {\r\n            //editar tarea existente\r\n            actualizarTarea(tarea);\r\n        }\r\n\r\n        //Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual._id);\r\n\r\n        //reiniciar form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className='formulario'>\r\n           <form\r\n                onSubmit={onSubmit}\r\n           >\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='text'\r\n                        className='input-text'\r\n                        placeholder='nombre tarea...'\r\n                        name='nombre'\r\n                        value={nombre}\r\n                        onChange = {hadleChange}\r\n                    />\r\n                </div>\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='submit'\r\n                        className='btn btn-primario btn-submit btn-block'\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form> \r\n            {errortarea ? <p className='mensaje error'> El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}