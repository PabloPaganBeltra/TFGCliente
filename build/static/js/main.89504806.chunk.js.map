{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","authContext","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","index","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","proyectRed","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","tarRed","TareaState","TareaReducer","params","tareas","put","alertR","AlertaState","alertaReducer","dispactch","setTimeout","authR","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89504806.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;\r\n","import { createContext } from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n\r\n    //extraer valores del context\r\n    const alertaContext = useContext( AlertaContext );\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado, iniciarSesion } = authContext;\r\n\r\n    //en caso de que el password o usuario no exista\r\n    useEffect(()=>{\r\n         if(autenticado){\r\n             props.history.push('/proyectos');\r\n         }\r\n        if(mensaje){\r\n            mostrarAlerta( mensaje.msg, mensaje.categoria);\r\n        }\r\n        \r\n        //eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history ]);\r\n\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    //extraer de usuario\r\n    const {email, password} = usuario;\r\n\r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario queira iniciar sesion\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n\r\n        //validar que no haya campos vacios \r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta(' Todos los campos son oblitagorios', 'alerta-error');\r\n        }\r\n\r\n        //pasarlo al action (fucnion definida en reducer)\r\n        iniciarSesion( { email, password });\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className='form-usuario'>\r\n            { alerta ?  \r\n                (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\r\n            : null}\r\n            <div className='contenedor-form sombra-dark'>\r\n                <h1>Iniciar Sesion</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='email'>Email </label>\r\n                        <input\r\n                            type='email'\r\n                            id='email'\r\n                            name='email'\r\n                            placeholder='ejemplo@ejemplo.ej'\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Contraseña123'\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo form'>\r\n                        <input \r\n                            type='submit' \r\n                            className='btn btn-primario btn-block' \r\n                            value='Iniciar Sesion'\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/nueva-cuenta'}className='enlace-cuenta'>\r\n                    Obtener cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst NuevaCuenta = ( props ) => {\r\n\r\n    //extraer valores del context\r\n    const alertaContext = useContext( AlertaContext );\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado, registrarUsuario } = authContext;\r\n\r\n    //en caso de que el usuario se haya registrado o sea un registro duplicado\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta( mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        //eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history ]);\r\n\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    });\r\n\r\n    //extraer de usuario\r\n    const {nombre, email, password, confirmar} = usuario;\r\n\r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario queira iniciar sesion\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios \r\n        if(nombre.trim() === '' || \r\n            email.trim() === '' || \r\n            password.trim() === '' || \r\n            confirmar.trim() === '' )\r\n            {\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n        }\r\n\r\n        //password minimo de 6 caracteres\r\n        if(password.length < 6){\r\n            mostrarAlerta('La contraseña debe tener por lo menos 6 carácteres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //los 2 passwords iguales\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Las contraseñas deben ser iguales', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //pasarlo al action (fuction definida en reducer)\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className='form-usuario'>\r\n            { alerta ?  \r\n                (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\r\n            : null}\r\n            <div className='contenedor-form sombra-dark'>\r\n                <h1>Crear Cuenta</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='nombre'>Nombre </label>\r\n                        <input\r\n                            type='text'\r\n                            id='nombre'\r\n                            name='nombre'\r\n                            placeholder='Nombre Completo'\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='email'>Email </label>\r\n                        <input\r\n                            type='email'\r\n                            id='email'\r\n                            name='email'\r\n                            placeholder='ejemplo@ejemplo.ej'\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Contraseña123'\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='confirmar'>Confirmar Password</label>\r\n                        <input\r\n                            type='password'\r\n                            id='confirmar'\r\n                            name='confirmar'\r\n                            placeholder='Contraseña123'\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='campo form'>\r\n                        <input \r\n                            type='submit' \r\n                            className='btn btn-primario btn-block' \r\n                            value='Registrarme'\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/'}className='enlace-cuenta'>\r\n                    Volver a Iniciar Sesion\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import { createContext } from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React, { Fragment, useContext, useState } from \"react\";\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    //Obtener state del formulario\r\n    /*\r\n     * Todas las funciones y todo lo que definimos en proyectoContext\r\n     * sera accesible a traves de este useContext\r\n     */\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError } \r\n    = proyectosContext;\r\n\r\n    //state para proyecto\r\n    const[proyecto, guardarProyecto] = useState({\r\n        nombre:''\r\n    });\r\n\r\n    //extraer nombre de proyecto\r\n    const { nombre } = proyecto;\r\n\r\n    //leer contenidos del input\r\n    const onChangeProyecto = e =>{\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //usuario envia proyecto\r\n    const onSubmitProyecto = e =>{\r\n        //prevenimos que no haga la accion por defecto\r\n        e.preventDefault();\r\n\r\n        //validar proyecto\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        //agregar al state\r\n        agregarProyecto(proyecto)\r\n\r\n        //reiniar el form\r\n            guardarProyecto({\r\n                nombre:''\r\n            })\r\n    }\r\n\r\n    //Mostrar formulario\r\n    \r\n\r\n    return ( \r\n        <Fragment>\r\n            <button\r\n                type='button' \r\n                className='btn btn-block btn-primario'\r\n                onClick={ ()=> mostrarFormulario() }\r\n            >Nuevo Proyecto</button>\r\n\r\n            {\r\n                formulario ?\r\n                (\r\n                    <form\r\n                        className='formulario-nuevo-proyecto'\r\n                        onSubmit={onSubmitProyecto}\r\n                    >\r\n                        <input\r\n                            type='text'\r\n                            className='input-text'\r\n                            placeholder='nombre proyecto'\r\n                            name='nombre'\r\n                            value={nombre}\r\n                            onChange={onChangeProyecto}\r\n                        />\r\n\r\n                        <input \r\n                            type='submit' \r\n                            className='btn btn-primario btn-block'\r\n                            value='agregar proyecto'\r\n                        />\r\n                    </form>\r\n                ) : null }\r\n\r\n            {errorformulario ? <p className='mensaje error'>El nombre del proyecto es obligatorio</p> : null}\r\n        </Fragment>\r\n        \r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;","import {createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;","import React, { useContext }from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    //Obtener context\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyectoActual } = proyectosContext;\r\n\r\n    //Obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { obtenerTareas } = tareasContext;\r\n\r\n    //Funcion para agregar le proyecto actual\r\n    const seleccionarProyecto = id =>{\r\n        proyectoActual(id); //Fijar un proyecto actual\r\n        obtenerTareas(id); //Filtrar las tareas cuando se de click\r\n    }\r\n\r\n    return ( \r\n        <li>\r\n            <button\r\n                type='button'\r\n                className='btn btn-blank btn-block'\r\n                onClick={ ()=> seleccionarProyecto(proyecto._id) }\r\n            >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    // Extraer proyectos del state inicial \r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta} = alertaContext\r\n\r\n    //Obtener proyectos cuando carga el componente\r\n    useEffect(()=>{\r\n\r\n        //si hay algun error\r\n        if(mensaje){\r\n            mostrarAlerta( mensaje.msg, mensaje.categoria);\r\n        }\r\n        obtenerProyectos();\r\n        //eslint-disable-next-line\r\n    },[ mensaje ]);\r\n\r\n    //Revisamos si proyectos tiene contenido\r\n    if(proyectos.length === 0 ) {return <p>No hay proyectos, empieza creando uno</p>};\r\n\r\n    return (  \r\n        <ul className='listado-proyectos' >\r\n\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n\r\n            <TransitionGroup>\r\n                {\r\n                    proyectos.map(proyecto => (\r\n                        <CSSTransition \r\n                            key={proyecto._id}\r\n                            timeout={200}\r\n                            classNames='proyecto'\r\n                        >\r\n\r\n                            <Proyecto \r\n                                proyecto={proyecto}\r\n                            />\r\n\r\n                        </CSSTransition>\r\n                    ))\r\n                }\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>TFG<span>Final</span></h1>\r\n\r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Barra = () => {\r\n\r\n    //extreaer informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    },[]);\r\n\r\n\r\n    return ( \r\n        <header className='app-header'>\r\n            {usuario \r\n                ? <p className='nombre-usuario'>Hola <span> {usuario.nombre} </span></p>\r\n                : null\r\n            }\r\n            <nav className='nav-principal'>\r\n                <button\r\n                    className='btn btn-blank cerrar-sesion'\r\n                    onClick={ () =>cerrarSesion() }\r\n                >\r\n                    Cerrar Sesion \r\n                </button>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Saber si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea} = tareasContext;\r\n\r\n    //EFFECT que detecta si hay una tarea seleccionada\r\n    useEffect(()=>{\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada);\r\n        } else {\r\n            guardarTarea({\r\n                nombre : ''\r\n            })\r\n        }\r\n        //dependencia\r\n    }, [tareaseleccionada]);\r\n\r\n\r\n    //State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre:''\r\n    })\r\n\r\n    //extraer el nombre del proyecto\r\n    const {nombre} = tarea;\r\n\r\n    //si no hay ningun proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //Array destructuring para extraer proyecto\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    //leer los valores del formualrio\r\n    const hadleChange = e =>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n        //Es edicion o nueva tarea ?\r\n        if(tareaseleccionada === null ){\r\n                //tarea nueva\r\n            //poner nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);  \r\n        }else {\r\n            //editar tarea existente\r\n            actualizarTarea(tarea);\r\n        }\r\n\r\n        //Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual._id);\r\n\r\n        //reiniciar form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className='formulario'>\r\n           <form\r\n                onSubmit={onSubmit}\r\n           >\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='text'\r\n                        className='input-text'\r\n                        placeholder='nombre tarea...'\r\n                        name='nombre'\r\n                        value={nombre}\r\n                        onChange = {hadleChange}\r\n                    />\r\n                </div>\r\n                <div className='contenedor-input'>\r\n                    <input \r\n                        type='submit'\r\n                        className='btn btn-primario btn-submit btn-block'\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form> \r\n            {errortarea ? <p className='mensaje error'> El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    //Saber si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual} = tareasContext;\r\n\r\n    //Extraer proyecto\r\n    const [proyectoActual] = proyecto;\r\n    \r\n    // funcion que se ejecutara cuando se aprieta el boton de eliminar tarea\r\n    const tareaEliminar = id =>{\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual._id);\r\n    }\r\n\r\n    //Funcion que modifica el estado de las tareas\r\n    const cambiarEstado = tarea => {\r\n        if(tarea.estado) {\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    //Seleccionar una tarea\r\n    const seleccionarTarea = tarea =>{\r\n        guardarTareaActual(tarea);\r\n    }\r\n\r\n    return ( \r\n        <li className='tarea sombra'>\r\n            <p>{tarea.nombre}</p>\r\n\r\n            <div className='estado'>\r\n                {tarea.estado \r\n                ?  \r\n                    (\r\n                        <button\r\n                            type='button'\r\n                            className='completo'\r\n                            onClick={ () => cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n                :\r\n                (\r\n                    <button\r\n                        type='button'\r\n                        className='incompleto'\r\n                        onClick={ () => cambiarEstado(tarea)}\r\n                    >Incompleto</button>\r\n                )   \r\n                }\r\n            </div>  \r\n            <div className='acciones'>\r\n                <button\r\n                    type='button'\r\n                    className='btn btn-primario'\r\n                    onClick={ ()=> seleccionarTarea(tarea) }\r\n                >Editar</button>\r\n\r\n                <button\r\n                    type='button'\r\n                    className='btn btn-secundario'\r\n                    onClick={ () => tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React, {Fragment, useContext} from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    //Obtener context\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto , eliminarProyecto } = proyectosContext;\r\n\r\n    //Obtener las tareas del proyecto\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareasproyecto } = tareasContext;\r\n\r\n    //si no hay ningun proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona o crea un proyecto para comenzar</h2>\r\n\r\n    //Array destructuring para extraer proyecto\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    //Eliminar un proyecto\r\n    const onClickEliminar = () => {\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n    \r\n    return ( \r\n        <Fragment>\r\n            <h2>Proyecto: { proyectoActual.nombre }</h2>\r\n\r\n            <ul className='listado-tareas'>\r\n                {tareasproyecto.length === 0\r\n                    \r\n                    ? (<li className='tarea'><p>no hay tareas</p></li>)\r\n\r\n                    : \r\n                    <TransitionGroup>\r\n                         {\r\n                            tareasproyecto.map((tarea, index) => (\r\n                                <CSSTransition\r\n                                    key={index}\r\n                                    timeout={200}\r\n                                    classNames=\"tarea\"\r\n                                >\r\n                                    <Tarea\r\n                                        key={index}\r\n                                        tarea={tarea}\r\n                                    />\r\n                                </CSSTransition>\r\n                            ))\r\n                        }\r\n                    </TransitionGroup>\r\n                }  \r\n\r\n            </ul>\r\n            <button\r\n                    type='button'\r\n                    className='btn btn-eliminar'\r\n                    onClick={onClickEliminar}\r\n                >Eliminar Proyecto </button>\r\n        </Fragment>\r\n        \r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React, {useContext, useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Proyectos = () => {\r\n\r\n    //extreaer informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const { usuarioAutenticado } = authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    },[]);\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n             <Sidebar /> \r\n            \r\n\r\n            <div className='seccion-principal'>\r\n                <Barra />\r\n\r\n                <main>\r\n                    <FormTarea />\r\n                    \r\n                    <div className='contenedor-tareas'>\r\n                        <ListadoTareas />\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Proyectos;","//types formulario\r\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n//types tareas\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\n//types alertas\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n//tipes auth\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\n\r\n\r\n\r\n","\r\nimport { \r\n    FORMULARIO_PROYECTO, \r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR\r\n    } from '../../types';\r\n\r\n const proyectRed = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return{\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: [...state.proyectos, action.payload],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return{\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter(\r\n                    proyecto => proyecto._id === action.payload \r\n                    )\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: state.proyectos.filter(\r\n                    proyecto => proyecto._id !== action.payload \r\n                    ),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default proyectRed","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, {useReducer} from 'react';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport { \r\n    FORMULARIO_PROYECTO, \r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR\r\n    } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n\r\n    const initialState = {\r\n        proyectos :[],\r\n        formulario : false,\r\n        errorformulario : false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Dispatch para ejecutar acciones, igual useState\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n    //Serie de funciones para el crud\r\n    const mostrarFormulario = () =>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    //Obtener los proyectos\r\n    const obtenerProyectos = async () =>{\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            });\r\n        } catch (error) {\r\n            const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //Agregar nuevo proyecto\r\n    const agregarProyecto = async proyecto => {\r\n\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            //Insertar proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            });\r\n        } catch (error) {\r\n            const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //Validar el formulario por errores\r\n    const mostrarError = () =>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //Seleccion del proyecto\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    //Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n\r\n            dispatch({\r\n                type:ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            });\r\n        } catch (error) {\r\n            const alerta ={\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos : state.proyectos,\r\n                formulario : state.formulario,\r\n                errorformulario : state.errorformulario,\r\n                proyecto : state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ProyectoState;","\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\n\r\n const tarRed = (state, action) =>{\r\n    switch(action.type){\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto : [action.payload, ...state.tareasproyecto],\r\n                //array nuevo de tareas mas la nueva\r\n                errortarea: false\r\n                //reseteamos el error si se hace bien para quitar el mensaje de alerta\r\n            }\r\n        \r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter( tarea => tarea._id !== action.payload )\r\n            }\r\n            \r\n            case TAREA_ACTUAL:\r\n                return{\r\n                    ...state,\r\n                    //este payload es la tarea completa, por eso lo colocamos aqui\r\n                    tareaseleccionada: action.payload\r\n                }\r\n            \r\n            case ACTUALIZAR_TAREA:\r\n                return{\r\n                    ...state,\r\n                    tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? \r\n                        action.payload : tarea ),\r\n                    tareaseleccionada:null\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default tarRed;","import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareaState = props => {\r\n    const initialState={\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    //Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n\r\n    //CREAR LAS FUNCIONES QUE NECESITAMOS DE LAS TAREAS\r\n\r\n    //Obtener las tareas de un proyecto \r\n    const obtenerTareas = async proyecto =>{\r\n        \r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{ params: { proyecto }});\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n                \r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Anyadir una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea=>{\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    //Validar y mostrar un error en caso de ser necesario\r\n    const validarTarea = () =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        });\r\n    }\r\n\r\n    //Eliminar las tareas por el id\r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    //edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n        try {\r\n            const resultado= await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload : resultado.data.tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Extraer una tarea para la edicion\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload : tarea\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <TareaContext.Provider\r\n        value={{\r\n            tareasproyecto : state.tareasproyecto,\r\n            errortarea: state.errortarea,\r\n            tareaseleccionada: state.tareaseleccionada,\r\n            obtenerTareas,\r\n            agregarTarea,\r\n            validarTarea,\r\n            eliminarTarea,\r\n            guardarTareaActual,\r\n            actualizarTarea\r\n        }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;","\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\n const alertR = ( state, action )=>{\r\n\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default alertR;","import React, { useReducer } from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = props => {\r\n\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n\r\n    const [ state, dispactch] = useReducer( alertaReducer, initialState );\r\n\r\n    //Funciones\r\n    const mostrarAlerta = (msg, categoria) =>{\r\n        dispactch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        //Ocultamos la alerta con un timeout\r\n        setTimeout(() =>{\r\n            dispactch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            { props.children }\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n } from '../../types';\r\n\r\n\r\n\r\n//export default ( state, action )=>{\r\nconst  authR= (state, action) =>{\r\n    switch(action.type){\r\n        //la respuesta nos da el token, asi que la podemos pasar por le payload\r\n        case LOGIN_EXITOSO:\r\n        case REGISTRO_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado:true,\r\n                mensaje:null,\r\n                cargando:false\r\n            }\r\n\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                usuario: action.payload,\r\n                autenticado: true,\r\n                cargando:false\r\n            }\r\n\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                usuario:null,\r\n                autenticado: null,\r\n                token:null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authR","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token =>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\n export default tokenAuth;","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n } from '../../types';\r\n\r\n const AuthState = props =>{\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n    //funciones para registrar los usuarios\r\n    const registrarUsuario = async datos=>{\r\n        try {\r\n            \r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos );\r\n            //console.log(respuesta.data);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n\r\n        } catch (error) {\r\n            //console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //devolver usuario autenticado\r\n    const usuarioAutenticado = async () =>{\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            //console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //usuario iniciando sesion\r\n    const iniciarSesion = async datos =>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            console.log(respuesta);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //cierra sesion del usuario\r\n    const cerrarSesion = ()=>{\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value ={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >{ props.children }\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n }\r\n\r\n export default AuthState;","import React, {useContext, useEffect} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n/**\r\n * EN ESTA PARTE DEL CODIGO COMPROBAMOS SI UN USUARIO ESTA AUTENTICADO Y \r\n * EN CASO DE NO ESTARLO LO REDIGIREMOS A LA PRIMERA PANTALLA, DE INICIO DE SESION\r\n */\r\n\r\nconst RutaPrivada = ({ component: Component, ...props}) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {  autenticado, cargando, usuarioAutenticado } = authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado();\r\n        //eslint-disable-next-line\r\n    },[])\r\n\r\n    return ( \r\n        <Route {...props} render= { props=> !autenticado && !cargando ? (\r\n            <Redirect to='/' />\r\n        ) : (\r\n            <Component { ...props } />\r\n        ) }\r\n        />\r\n            \r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n//revisamos si tenemos un token\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n};\n\nfunction App() {\n\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n                <Switch>\n                    <Route exact path='/' component={Login} />\n                    <Route exact path='/nueva-cuenta' component={NuevaCuenta} />\n                    <RutaPrivada exact path='/proyectos' component={Proyectos} />\n                </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}